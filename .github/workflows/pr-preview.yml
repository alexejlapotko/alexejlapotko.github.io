name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main, master]

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

# Allow only one concurrent deployment per PR
concurrency:
  group: "pages-pr-${{ github.event.number }}"
  cancel-in-progress: true

jobs:
  deploy-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Create preview site structure
        run: |
          # Create the main site structure
          mkdir -p _site/pr-previews/pr-${{ github.event.number }}
          
          # Copy main site files to root (for main branch access)
          cp *.html _site/ 2>/dev/null || true
          cp *.css _site/ 2>/dev/null || true  
          cp *.js _site/ 2>/dev/null || true
          cp -r assets _site/ 2>/dev/null || true
          cp -r images _site/ 2>/dev/null || true
          cp -r styles _site/ 2>/dev/null || true
          cp -r scripts _site/ 2>/dev/null || true
          cp -r fonts _site/ 2>/dev/null || true
          cp -r media _site/ 2>/dev/null || true
          
          # Copy PR preview files to preview directory
          cp *.html _site/pr-previews/pr-${{ github.event.number }}/ 2>/dev/null || true
          cp *.css _site/pr-previews/pr-${{ github.event.number }}/ 2>/dev/null || true  
          cp *.js _site/pr-previews/pr-${{ github.event.number }}/ 2>/dev/null || true
          cp -r assets _site/pr-previews/pr-${{ github.event.number }}/ 2>/dev/null || true
          cp -r images _site/pr-previews/pr-${{ github.event.number }}/ 2>/dev/null || true
          cp -r styles _site/pr-previews/pr-${{ github.event.number }}/ 2>/dev/null || true
          cp -r scripts _site/pr-previews/pr-${{ github.event.number }}/ 2>/dev/null || true
          cp -r fonts _site/pr-previews/pr-${{ github.event.number }}/ 2>/dev/null || true
          cp -r media _site/pr-previews/pr-${{ github.event.number }}/ 2>/dev/null || true
          
          # Create PR previews index page
          mkdir -p _site/pr-previews
          cat > _site/pr-previews/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>PR Previews - 3D Rubik's Cube</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
                  .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                  h1 { color: #333; border-bottom: 3px solid #007cba; padding-bottom: 10px; }
                  .preview-item { margin: 20px 0; padding: 20px; border: 1px solid #ddd; border-radius: 8px; background: #fafafa; }
                  .preview-item h3 { margin-top: 0; color: #007cba; }
                  .preview-link { display: inline-block; padding: 10px 20px; background: #007cba; color: white; text-decoration: none; border-radius: 4px; margin-right: 10px; }
                  .preview-link:hover { background: #005a87; }
                  .main-link { background: #28a745; }
                  .main-link:hover { background: #1e7e34; }
                  .no-previews { text-align: center; color: #666; font-style: italic; padding: 40px; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üöÄ 3D Rubik's Cube - Deployments</h1>
                  
                  <div class="preview-item">
                      <h3>üè† Main Site</h3>
                      <p>The main production version of the site.</p>
                      <a href="../" class="preview-link main-link">View Main Site</a>
                  </div>
                  
                  <h2>üìã PR Previews</h2>
                  <div class="preview-item">
                      <h3>PR #${{ github.event.number }}</h3>
                      <p>Preview for the current pull request changes.</p>
                      <a href="pr-${{ github.event.number }}/" class="preview-link">View Preview</a>
                  </div>
                  
                  <p><em>This page shows the current PR preview. When deployed to production, it will show all active PR previews.</em></p>
              </div>
          </body>
          </html>
          EOF
          
          # Ensure we have an index.html in the main site
          if [ ! -f "_site/index.html" ]; then
            echo "Error: No index.html found in the repository root"
            exit 1
          fi
          
          echo "Preview site structure created:"
          find _site -type f | head -20
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
          
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;
            
            // Get the deployment URL from the previous step
            const deploymentUrl = '${{ steps.deployment.outputs.page_url }}';
            const previewUrl = `${deploymentUrl}pr-previews/pr-${prNumber}/`;
            const previewIndexUrl = `${deploymentUrl}pr-previews/`;
            
            // Check if we already commented
            const comments = await github.rest.issues.listComments({
              owner: repoOwner,
              repo: repoName,
              issue_number: prNumber,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('üöÄ Preview deployment')
            );
            
            const commentBody = `üöÄ **Preview deployment ready!**
            
            Your changes are now available for preview at:
            **${previewUrl}**
            
            üìã **All previews**: ${previewIndexUrl}
            üè† **Main site**: ${deploymentUrl}
            
            This preview will be updated automatically when you push new changes to this PR.
            
            ---
            *Using modern GitHub Pages deployment - previews are managed automatically.*`;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: repoOwner,
                repo: repoName,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: repoOwner,
                repo: repoName,
                issue_number: prNumber,
                body: commentBody
              });
            }

  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    steps:      
      - name: Update PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;
            
            // Find and update the bot comment
            const comments = await github.rest.issues.listComments({
              owner: repoOwner,
              repo: repoName,
              issue_number: prNumber,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('üöÄ Preview deployment')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: repoOwner,
                repo: repoName,
                comment_id: botComment.id,
                body: `üöÄ **Preview deployment**
                
                ‚úÖ Preview has been cleaned up as this PR was closed.
                
                ---
                *Using modern GitHub Pages deployment - previews are managed automatically.*`
              });
            }